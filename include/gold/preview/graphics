// <gold/preview/graphics> - gold++ library

// Copyright (C) 2021 - present Desmond Gold

// note: this is only a prototype
// note: the header is OS-specific and usable only in "demo"
// note: this header only concerns on 2D

#pragma once
#ifndef __GOLD_PREVIEW_GRAPHICS
#define __GOLD_PREVIEW_GRAPHICS

#ifndef _WIN32
#   error "Requires Windows OS Support"
#endif // _WIN32

#include <windows.h>
#include <GL/gl.h>
#include <GL/glu.h>
#include <GL/glut.h>

#include <string_view>

#include <gold/preview/console>
#include <gold/preview/linear>
#include <gold/preview/cartesian_coords>

namespace gold::preview {

  namespace graphics {
    
    /// coord_t
    template <typename T>
    struct coord_t : ::gold::preview::cartesian_coord_t<T>;
    
    /// dimension_t
    template <typename>
    struct dimension_t;
     
    /// rectangle_t
    template <typename>
    struct rectangle_t;
    
    /// color_info_t
    struct color_info_t;
    
    /// window_construct_t
    struct window_construct_t;
    
    /// window_t
    class window_t;
    
    namespace canvas {
    
      /// set_color
      void set_color(color_info_t);
      
      /// line_info_t
      struct line_info_t;
      
      /// draw_options
      enum class draw_options { outline, fill };
      
      /// fonts
      class fonts;
      
      /// string_construct_t
      struct string_construct_t;
      
      /// string
      void string(string_construct_t);
      
      /// arc_construct_t
      struct arc_construct_t;
      
      /// arc
      void arc(arc_construct_t);
      
      /// sector_construct_t
      struct sector_construct_t
      
      /// sector
      void sector(sector_construct_t);
      
      /// circle_construct_t
      struct circle_construct_t
      
      /// circle
      void circle(circle_construct_t);
      
      /// ellipse_construct_t
      struct ellipse_construct_t
      
      /// ellipse
      void ellipse(ellipse_construct_t);
      
      /// line_construct_t
      struct line_construct_t;
      
      /// line
      void line(line_construct_t);
      
      /// polygon_construct_t
      struct polygon_construct_t;
      
      /// polygon
      void polygon(polygon_construct_t);
      
      /// rectangle
      void rectangle(rectangle_t);
      void rectangle(coord_t, coord_t);
      
    }
  
  } // namespace graphics

} // namespace gold::preview

#endif // __GOLD_PREVIEW_GRAPHICS
