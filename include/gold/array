// <gold/array> - gold++ library

// Copyright (C) 2021 - present Desmond Gold

#pragma once
#ifndef __GOLD_ARRAY
#define __GOLD_ARRAY

#include <array>
#include <gold/bits/value_sequence/primitives.hpp>

namespace gold {

    /// make_array_from_sequence
    template <typename Seq>
    consteval auto make_array_from_sequence() {
        if constexpr (std::is_integral_v<typename Seq::value_type>) {
            return []<auto... Ns>(std::integer_sequence<typename Seq::value_type, Ns...>) {
                return std::array{ Ns... };
            }(Seq{});
        } else if constexpr (std::is_floating_point_v<typename Seq::value_type>) {
            return []<auto... Ns>(floating_point_sequence<typename Seq::value_type, Ns...>) {
                return std::array{ Ns... };
            }(Seq{});
        }
    }

} // namespace gold

#endif // __GOLD_ARRAY
